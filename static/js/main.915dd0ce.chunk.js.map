{"version":3,"sources":["contexts/ThemeContext.tsx","pwa/serviceWorkerRegistration.ts","pwa/index.tsx","components/Global/index.tsx","img/parallax-bg.jpg","components/Header/index.tsx","components/Post/index.tsx","components/Sidebar/index.tsx","pages/Home/index.tsx","pages/Loading/index.tsx","App.tsx","index.tsx"],"names":["ThemeContext","createContext","availableThemes","light","dark","rgb","Theme","children","useState","currentTheme","setCurrentTheme","defaultTheme","createTheme","theme","newTheme","setTheme","localStorage","setItem","document","body","setAttribute","useEffect","getItem","window","addEventListener","event","newValue","Provider","value","cycleTheme","themeArray","Object","keys","next","indexOf","length","getTheme","localTheme","index","name","isLocalhost","Boolean","location","hostname","match","register","config","navigator","URL","process","href","origin","swUrl","fetch","headers","then","response","contentType","get","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","PWA","GlobalStyles","Header","useContext","currentThemeIndex","setCurrentThemeIndex","getAttribute","themes","nextThemeEmoji","pages","id","src","bg","alt","className","to","map","page","isCurrentPage","split","onClick","Post","title","image","tags","titleURL","replace","toLowerCase","normalize","tag","Sidebar","user","ad","profile","description","link","text","phrase","Home","posts","post","Loading","App","fallback","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"isFASaA,EAAeC,wBAAc,IAMpCC,EAAkB,CACtBC,MAAO,QACPC,KAAM,OACNC,IAAK,OAIMC,EAAgC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9C,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAe,OAMrB,SAASC,EAAYC,GACnB,IAAIC,EAAWD,EAEXX,EAAgBW,KAClBC,EAAWH,GAGbI,EAASD,GAIX,SAASC,EAASF,GAEhBH,EAAgBG,GAEhBG,aAAaC,QAAQ,QAASJ,GAC9BK,SAASC,KAAKC,aAAa,aAAcP,GA+B3C,OAjDAQ,qBAAU,kBAAMN,EAASC,aAAaM,QAAQ,UAAYX,KAAe,IA+CzEY,OAAOC,iBAAiB,WAAW,SAACC,GAAD,OAAWb,EAAYa,EAAMC,aAG9D,cAAC1B,EAAa2B,SAAd,CAAuBC,MAAO,CAAEhB,cAAaG,WAAUc,WA5BzD,WACE,IAAMC,EAAqDC,OAAOC,KAAK9B,GAInE+B,EAFiBH,EAAWI,QAAQzB,GAEb,EAGxBwB,IAJSH,EAAWK,SAINF,EAAO,GAExBlB,EAASe,EAAWG,KAkB+CG,SAfrE,WACE,IAAMC,EAAarB,aAAaM,QAAQ,SAMxC,OALAZ,EAAgB2B,GAKT,CACLC,MAJiBP,OAAOC,KAAK9B,GACNgC,QAAQG,GAI/BE,KAAMF,KAMR,SACG9B,KCnEDiC,EAAcC,QACW,cAA7BlB,OAAOmB,SAASC,UAEe,UAA7BpB,OAAOmB,SAASC,UAEhBpB,OAAOmB,SAASC,SAASC,MAAM,2DAQ5B,SAASC,EAASC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIC,IAAIC,SAAwB1B,OAAOmB,SAASQ,MACpDC,SAAW5B,OAAOmB,SAASS,OAIvC,OAGF5B,OAAOC,iBAAiB,QAAQ,WAC9B,IAAM4B,EAAK,UAAMH,SAAN,sBAEPT,IAgEV,SAAiCY,EAAeN,GAE9CO,MAAMD,EAAO,CACXE,QAAS,CAAE,iBAAkB,YAE5BC,MAAK,SAACC,GAEL,IAAMC,EAAcD,EAASF,QAAQI,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYvB,QAAQ,cAG5Ca,UAAUa,cAAcC,MAAMN,MAAK,SAACO,GAClCA,EAAaC,aAAaR,MAAK,WAC7BhC,OAAOmB,SAASsB,eAKpBC,EAAgBb,EAAON,MAG1BoB,OAAM,WACLC,QAAQC,IAAI,oEAtFVC,CAAwBjB,EAAON,GAI/BC,UAAUa,cAAcC,MAAMN,MAAK,WACjCY,QAAQC,IACN,+GAMJH,EAAgBb,EAAON,OAM/B,SAASmB,EAAgBb,EAAeN,GACtCC,UAAUa,cACPf,SAASO,GACTG,MAAK,SAACO,GACLA,EAAaQ,cAAgB,WAC3B,IAAMC,EAAmBT,EAAaU,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACf3B,UAAUa,cAAce,YAI1BR,QAAQC,IACN,+GAKEtB,GAAUA,EAAO8B,UACnB9B,EAAO8B,SAASd,KAMlBK,QAAQC,IAAI,sCAGRtB,GAAUA,EAAO+B,WACnB/B,EAAO+B,UAAUf,WAO5BI,OAAM,SAACY,GACNX,QAAQW,MAAM,4CAA6CA,MC5F1D,IAAMC,EAAoB,SAAC,GAAkB,IAAhBxE,EAAe,EAAfA,SAGlC,OAFAsC,IAGE,mCACCtC,KCJQyE,G,MAAqC,SAAC,GAAkB,IAAhBzE,EAAe,EAAfA,SACnD,OACE,mCACGA,MCXQ,MAA0B,wCCS5B0E,G,MAAS,WACpB,MAAiCC,qBAAWlF,GAApC6B,EAAR,EAAQA,WAAYO,EAApB,EAAoBA,SAEpB,EAAkD5B,mBAAS,GAA3D,mBAAO2E,EAAP,KAA0BC,EAA1B,KAEA/D,qBAAU,kBAAM+D,EAAqBhD,IAAWE,SAAQ,CAACpB,SAASC,KAAKkE,aAAa,gBAEpF,IAAMC,EAAS,CACb,EAAG,eACH,EAAG,eACH,EAAG,gBAIDrD,EAAQkD,EAAoB,EAE7BlD,IAHSF,OAAOC,KAAKsD,GAAQnD,SAGfF,EAAO,GAExB,IAAMsD,EAAiBD,EAAOrD,GAExBuD,EAAQ,CAAC,YAAU,UAAW,WAAY,YAAU,aAAc,OAAQ,SAChF,OACE,yBAAQC,GAAG,MAAX,UACE,qBAAKC,IAAKC,EAAIC,IAAI,aAElB,0BAASC,UAAU,WAAnB,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,sDAGF,8BACE,6BACGN,EAAMO,KAAI,SAAAC,GACT,IACMC,EADc1E,OAAOmB,SAASQ,KAAKgD,MAAM,KACb,KAAOF,EAEzC,OAAGC,IAQkB,IAAlBA,GAA2BD,IAASR,EAAM,GANzC,6BACE,cAAC,IAAD,CAAM,cAAY,OAAOM,GAAE,WAAME,GAAjC,SAA0CA,KADnCA,GAeX,6BACE,cAAC,IAAD,CAAMF,GAAE,WAAME,GAAd,SAAuBA,KADhBA,UAOjB,wBAAQG,QAAS,kBAAMtE,KAAvB,SAAsC0D,YCtDjCa,G,MAAsB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAE5CC,EAAWH,EAAMI,QAAQ,OAAQ,KAAKC,cAAcC,UAAU,OAAOF,QAAQ,mBAAoB,IAGvG,OACE,0BAASN,QAAS,kBAFS5E,OAAOmB,SAASQ,KAAhB,gBAAgCsD,IAEjBX,UAAU,gBAApD,UACE,qBAAKA,UAAU,QAAf,SACE,6BAAKQ,MAEP,uBACA,qBAAKX,IAAKY,EAAOV,IAAKS,IACtB,iCACE,qCACGE,EAAKR,KAAI,SAAAa,GACR,MAAgB,KAAbA,EAAIrE,MAQS,6BAAbqE,EAAIrE,KANH,+BACGqE,EAAIrE,MADIqE,EAAInB,IAejB,0CACOmB,EAAIrE,OADAqE,EAAInB,gBCrBhBoB,G,MAAU,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,GACtBxE,EAAqCuE,EAArCvE,KAAMyE,EAA+BF,EAA/BE,QAAShB,EAAsBc,EAAtBd,KAAMiB,EAAgBH,EAAhBG,YAC7B,OACE,kCACE,sBAAKxB,GAAG,OAAR,UACE,yBAAQA,GAAG,UAAX,UACE,qBAAKI,UAAU,gBAEf,4BAAItD,IACJ,gCAAQyE,OAGV,+BACE,4BAAIC,MAGN,iCACE,cAAC,IAAD,CAAMnB,GAAE,WAAME,EAAKkB,MAAnB,SACGlB,EAAKmB,YAKZ,sBAAK1B,GAAG,KAAR,UACE,2BAEA,iCACE,6BAAI,iCAASsB,EAAGE,gBAChB,gCAAQF,EAAGK,SACX,cAAC,IAAD,CAAMtB,GAAE,WAAMiB,EAAGf,KAAKkB,MAAtB,SACGH,EAAGf,KAAKmB,kB,QClDRE,G,MAAO,WAoBlB,OACE,mCACE,uBAAMxB,UAAU,gBAAhB,UACE,8BACE,cAAC,EAAD,MAGF,kCACGyB,EAAMvB,KAAI,SAAAwB,GACT,OAAO,cAAC,EAAD,CAAoBlB,MAAOkB,EAAKlB,MAAOE,KAAMgB,EAAKhB,KAAMD,MAAK,UAAKiB,EAAKjB,QAA5DiB,EAAK9B,SAI3B,cAAC,EAAD,CAASqB,KAhCF,CACXvE,KAAM,gBACNyE,QAAS,gBACTC,YAAa,4BACbjB,KAAM,CACJkB,KAAM,QACNC,KAAM,qBA0BiBJ,GAtBhB,CACTE,YAAa,mDACbG,OAAQ,yCACRpB,KAAM,CACJkB,KAAM,cACNC,KAAM,2B,QChBNL,G,MAAO,CACXvE,KAAM,gBACNyE,QAAS,gBACTC,YAAa,4BACbjB,KAAM,CACJkB,KAAM,QACNC,KAAM,sBAIJJ,EAAK,CACTE,YAAa,mDACbG,OAAQ,yCACRpB,KAAM,CACJkB,KAAM,cACNC,KAAM,kBAgBGK,EAAU,WACrB,OACE,qBAAK3B,UAAU,UAAf,SACE,uBAAMA,UAAU,gBAAhB,UACE,8BACE,cAAC,EAAD,MAGF,kCACGyB,EAAMvB,KAAI,SAACwB,GAAD,OAAoB,cAAC,EAAD,CAAoBlB,MAAOkB,EAAKlB,MAAOE,KAAMgB,EAAKhB,KAAMD,MAAOiB,EAAKjB,OAAzDiB,EAAK9B,SAGjD,cAAC,EAAD,CAASqB,KAAMA,EAAMC,GAAIA,UCvCpBU,EAAM,WACjB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAUF,EAApB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAM,cAAC,EAAD,OACvC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,WAAWC,UAAW,kBAAM,cAAC,EAAD,OAC9C,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,IAAD,CAAU9B,GAAG,sBChB/BgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9G,SAAS+G,eAAe,U","file":"static/js/main.915dd0ce.chunk.js","sourcesContent":["import { FC, createContext, useState, ReactNode, useEffect } from \"react\"\n\ntype ThemeContextType = {\n  createTheme: (theme: keyof typeof availableThemes) => void\n  setTheme: (theme: keyof typeof availableThemes) => void\n  cycleTheme: () => void\n  getTheme: () => { index: number, name: string }\n}\n\nexport const ThemeContext = createContext({} as ThemeContextType)\n\ntype ThemeProviderProps = {\n  children: ReactNode\n}\n\nconst availableThemes = {\n  light: \"light\",\n  dark: \"dark\",\n  rgb: \"rgb\"\n}\n\n\nexport const Theme: FC<ThemeProviderProps> = ({ children }) => {\n  const [currentTheme, setCurrentTheme] = useState(\"\")\n  const defaultTheme = \"dark\"\n\n\n  /** Set initial app theme */\n  useEffect(() => setTheme(localStorage.getItem(\"theme\") || defaultTheme), [])\n\n  function createTheme(theme: keyof typeof availableThemes | string) {\n    let newTheme = theme\n\n    if(!availableThemes[theme]) {\n      newTheme = defaultTheme\n    }\n    \n    setTheme(newTheme)\n  }\n\n  /** Just set theme in localStorage and body */\n  function setTheme(theme: keyof typeof availableThemes | string) {\n    /** Checking localStorage for theme */\n    setCurrentTheme(theme)\n\n    localStorage.setItem(\"theme\", theme)\n    document.body.setAttribute(\"data-theme\", theme)\n  }\n\n  /** This will cycle through all themes */\n  function cycleTheme() {\n    const themeArray: [keyof typeof availableThemes] | any[] = Object.keys(availableThemes)\n\n    const currentIndex = themeArray.indexOf(currentTheme)\n    const max = themeArray.length\n    let next  = currentIndex + 1\n\n    /** If next item reaches the max of the array, set it to the first array item */\n    if(next === max) next = 0\n\n    setTheme(themeArray[next])\n  }\n\n  function getTheme() {\n    const localTheme = localStorage.getItem(\"theme\")\n    setCurrentTheme(localTheme!)\n\n    const themeArray = Object.keys(availableThemes)\n    const index = themeArray.indexOf(localTheme!)\n\n    return {\n      index,\n      name: localTheme!\n    }\n  }\n  window.addEventListener(\"storage\", (event) => createTheme(event.newValue!))\n\n  return (\n    <ThemeContext.Provider value={{ createTheme, setTheme, cycleTheme, getTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  )\n} ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { FC, ReactNode } from \"react\"\nimport { register } from \"./serviceWorkerRegistration\"\n\ntype PWAProps = {\n  children: ReactNode\n}\n\nexport const PWA: FC<PWAProps> = ({ children }) => {\n  register()\n\n  return (\n    <>\n    {children}\n    </>\n  )\n}","import { FC, ReactNode } from 'react';\n\nimport './styles.scss';\n\ntype GlobalStylesType = {\n  children: ReactNode\n}\n\nexport const GlobalStyles: FC<GlobalStylesType> = ({ children }) => {\n  return (\n    <>\n      {children}\n    </>\n  )\n};\n","export default __webpack_public_path__ + \"static/media/parallax-bg.28ba6662.jpg\";","import { useState, useEffect, useContext } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\"\n\nimport bg from \"../../img/parallax-bg.jpg\"\n\nimport \"./styles.scss\"\n\nexport const Header = () => {\n  const { cycleTheme, getTheme } = useContext(ThemeContext)\n\n  const [currentThemeIndex, setCurrentThemeIndex] = useState(0)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => setCurrentThemeIndex(getTheme().index), [document.body.getAttribute(\"data-theme\")])\n\n  const themes = {\n    0: \"☀️\",\n    1: \"🌑\",\n    2: \"🎉\"\n  }\n\n  const max = Object.keys(themes).length\n  let next  = currentThemeIndex + 1\n\n  if(next === max) next = 0\n\n  const nextThemeEmoji = themes[next]\n  \n  const pages = [\"início\", \"artigos\", \"recursos\", \"vídeos\", \"plataforma\", \"ENEM\", \"sobre\"]\n  return (\n    <header id=\"nav\">\n      <img src={bg} alt=\"nothing.\" />\n\n      <section className=\"parallax\">\n        <Link to=\"/\">\n          <h1>Blog de Química</h1>\n        </Link>\n\n        <nav>\n          <ul>\n            {pages.map(page => {\n              const currentPage = window.location.href.split(\"/\")\n              const isCurrentPage = currentPage[4] === page\n\n              if(isCurrentPage) {\n                return (\n                  <li key={page}>\n                    <Link data-active=\"true\" to={`/${page}`}>{page}</Link>\n                  </li>\n                )\n              }\n              \n              if(isCurrentPage === false && page === pages[0]) {\n                return (\n                  <li key={page}>\n                    <Link data-active=\"true\" to={`/${page}`}>{page}</Link>\n                  </li>\n                )\n              } \n\n              return (\n                <li key={page}>\n                  <Link to={`/${page}`}>{page}</Link>\n                </li>\n              )\n            })}\n          </ul>\n        </nav>\n        <button onClick={() => cycleTheme()}>{nextThemeEmoji}</button>\n      </section>\n    </header>\n  )\n}","import { FC } from \"react\"\n\nimport \"./styles.scss\"\n\ntype Tags = {\n  id: number\n  name: string | \"🇧🇷\"\n}\n\ntype PostProps = {\n  title: string\n  image: string\n  tags: Tags[]\n}\n\nexport const Post: FC<PostProps> = ({ title, image, tags }) => {\n  /** Removes glyphs, put dash between the spaces, lowercase */\n  const titleURL = title.replace(/\\s+/g, '-').toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\")\n  \n  const handleRedirect = () => window.location.href = `/post/${titleURL}`\n  return (\n    <section onClick={() => handleRedirect()} className=\"postContainer\">\n      <div className=\"title\">\n        <h1>{title}</h1>\n      </div>\n      <hr />\n      <img src={image} alt={title} />\n      <figure>\n        <figcaption>\n          {tags.map(tag => {\n            if(tag.name === \"\") {\n              return (\n                <span key={tag.id}>\n                  {tag.name}\n                </span>\n              )\n            }\n\n            if(tag.name === \"🇧🇷\") {\n              return (\n                <span key={tag.id}>\n                  {tag.name}\n                </span>\n              )\n            }\n\n            return (\n              <span key={tag.id}>\n                {`#${tag.name}`}\n              </span>\n            )\n          })}\n        </figcaption>\n      </figure>\n    </section>\n  )\n}","import { Link } from \"react-router-dom\"\n\nimport \"./styles.scss\";\n\ntype SidebarProps = {\n  user: {\n    name: string\n    profile: string\n    description: string\n\n    page: {\n      link: string\n      text: string\n    }\n  }\n\n  ad: {\n    description: string\n    phrase: string\n    \n    page: {\n      link: string\n      text: string\n    }\n  }\n}\nexport const Sidebar = ({ user, ad }: SidebarProps) => {\n  const { name, profile, page, description } = user\n  return (\n    <aside>\n      <div id=\"user\">\n        <header id=\"profile\">\n          <div className=\"profile-img\" />\n\n          <p>{name}</p>\n          <small>{profile}</small>\n        </header>\n\n        <main>\n          <p>{description}</p>\n        </main>\n\n        <footer>\n          <Link to={`/${page.link}`}>\n            {page.text}\n          </Link>\n        </footer>\n      </div>\n\n      <div id=\"ad\">\n        <header />\n\n        <main>\n          <h4><strong>{ad.description}</strong></h4>\n          <small>{ad.phrase}</small>\n          <Link to={`/${ad.page.link}`}>\n            {ad.page.text}\n          </Link>\n        </main>\n      </div>\n    </aside>\n  )\n}","import { Header, Post, Sidebar } from \"../../components\"\n\nimport posts from \"./posts.json\"\n\nimport \"./styles.scss\"\n\nexport const Home = () => {\n  const user = {\n    name: \"Vitor Gouveia\",\n    profile: \"@vitorgouveia\",\n    description: \"Dev Sênior, Químico\",\n    page: {\n      link: \"vitor\",\n      text: \"See my articles!\"\n    }\n  }\n\n  const ad = {\n    description: \"The Ultimate Software Engineering Interview Prep\",\n    phrase: \"AlgoExpert | Ace the Coding Interviews\",\n    page: {\n      link: \"algo-expert\",\n      text: \"algoexpert.io\"\n    }\n  }\n\n  return (\n    <>\n      <main className=\"homeContainer\">\n        <nav>\n          <Header />\n        </nav>\n\n        <article>\n          {posts.map(post => {\n            return <Post key={post.id} title={post.title} tags={post.tags} image={`${post.image}`} />\n          })}\n        </article>\n\n        <Sidebar user={user} ad={ad} />\n      </main>\n    </>\n  );\n};\n","import { Header, Post, Sidebar } from \"../../components\"\n\nimport posts from \"./posts.json\"\n\nimport \"./styles.scss\"\n\nconst user = {\n  name: \"Vitor Gouveia\",\n  profile: \"@vitorgouveia\",\n  description: \"Dev Sênior, Químico\",\n  page: {\n    link: \"vitor\",\n    text: \"See my articles!\"\n  }\n}\n\nconst ad = {\n  description: \"The Ultimate Software Engineering Interview Prep\",\n  phrase: \"AlgoExpert | Ace the Coding Interviews\",\n  page: {\n    link: \"algo-expert\",\n    text: \"algoexpert.io\"\n  }\n}\n\ntype Tag = {\n  id: number\n  name: string\n}\n\ntype PostType = {\n  id: number\n  title: string\n  tags: Tag[]\n  image: string\n}\n\nexport const Loading = () => {\n  return (\n    <div className=\"loading\">\n      <main className=\"homeContainer\">\n        <nav>\n          <Header />\n        </nav>\n\n        <article>\n          {posts.map((post: PostType) => <Post key={post.id} title={post.title} tags={post.tags} image={post.image} />)}\n        </article>\n\n        <Sidebar user={user} ad={ad} />\n      </main>\n    </div>\n  )\n}","import { Suspense } from 'react';\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Theme } from \"./contexts/ThemeContext\"\nimport { PWA } from \"./pwa\"\n\nimport { Home, Loading } from './pages';\n\nimport { GlobalStyles } from './components/Global';\n\nexport const App = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Suspense fallback={Loading}>\n          <PWA>\n            <GlobalStyles>\n              <Theme>\n                <Route exact path=\"/\" component={() => <Home />} />\n                <Route exact path=\"/loading\" component={() => <Loading />} />\n                <Route exact path=\"/fobos\">\n                  <Redirect to=\"/\" />\n                </Route> \n              </Theme>\n            </GlobalStyles>\n          </PWA>\n        </Suspense>\n      </Switch>\n    </HashRouter>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('app')\n);"],"sourceRoot":""}