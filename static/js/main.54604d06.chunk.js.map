{"version":3,"sources":["contexts/FontContext.tsx","styles/global.ts","styles/themes/default.ts","styles/themes/dark.ts","styles/themes/light.ts","contexts/ThemeContext.tsx","hooks/usePersistedState.ts","hooks/useClamp.ts","hooks/useTheme.ts","components/Button/styles.ts","components/Button/index.tsx","components/Header/styles.ts","components/Header/index.tsx","components/Link/index.tsx","components/Logo/styles.ts","components/Logo/index.tsx","pwa/serviceWorkerRegistration.ts","router.tsx","App.tsx","index.tsx"],"names":["FontSizeContext","createContext","FontSize","children","useState","Number","getComputedStyle","document","querySelector","fontSize","slice","rootFontSize","setRootFontSize","Provider","value","Main","styled","main","paddingTop","props","theme","colors","gray","createGlobalStyle","fonts","css","Rubik","title","DM","sizes","sm","accent","dark","lighten","darken","light","availableThemes","ThemeContext","Theme","key","initialState","state","setState","useEffect","localStorage","setItem","JSON","stringify","usePersistedState","currentTheme","setCurrentTheme","themes","toggleTheme","getThemes","useClamp","min","max","useContext","minFontSize","split","maxFontSize","minWidth","slope","yAxisIntersection","useTheme","loadingSpinner","keyframes","ButtonContainer","button","paddingBlockClamp","paddingHorizontalClamp","outlined","backgroundColor","disabled","active","loading","Button","variant","href","name","type","isLoading","setIsLoading","ButtonRef","useRef","background","setBackground","setOutlined","current","addEventListener","tabIndex","ref","memo","Container","header","NavigationContainer","nav","LogoContainer","div","Nav","ul","NavItem","li","ActionContainer","section","Header","headerRef","headerPaddingBlock","size","Link","rest","to","rel","textFocusAnimation","direction","SvgLogo","svg","marginLeftClamp","LogoTitle","h1","fontSizeClamp","Logo","logoMarginLeft","logoTitleFontSize","LogoImg","useMemo","width","height","viewBox","fill","xmlns","clipPath","id","d","LogoName","component","setComponent","isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","origin","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","Router","Home","lazy","App","headerHeight","setHeaderHeight","HeaderRef","useLayoutEffect","onreadystatechange","offsetHeight","fallback","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.54604d06.chunk.js","sourcesContent":["import { createContext, Dispatch, FC, ReactNode, SetStateAction, useState } from \"react\"\n\ntype FontSizeContextProps = {\n  rootFontSize: number\n  setRootFontSize: Dispatch<SetStateAction<number>>\n}\n\nexport const FontSizeContext = createContext({} as FontSizeContextProps)\n\ntype FontSizeProviderProps = {\n  children: ReactNode\n}\n\nexport const FontSize: FC<FontSizeProviderProps> = ({ children }) => {\n  const [rootFontSize, setRootFontSize] = useState(() => {\n    return Number(getComputedStyle(document.querySelector('html') as Element).fontSize.slice(0, -2) || 16);\n  })\n\n  return (\n    <FontSizeContext.Provider value={{ rootFontSize, setRootFontSize }}>\n      {children}\n    </FontSizeContext.Provider>\n  )\n}","import styled, { createGlobalStyle, css } from \"styled-components\"\n\ntype MainProps = {\n  paddingTop: number\n}\n\nexport const Main = styled.main<MainProps>`\n  padding-top: ${({paddingTop }) => paddingTop}px;\n\n  background: ${props => props.theme.colors.gray[800]};\n\n  width: 100%;\n  height: 100%;\n`\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    transition: background 400ms;\n  }\n\n  html, body {\n    width: 100%;\n    height: 100%;\n    \n    ${({ theme: { colors, fonts } }) => css`\n      font-family: ${fonts.Rubik};\n      color: ${colors.gray[50]};\n      background: ${colors.gray[600]}\n    `}\n  }\n\n  ul {\n    list-style: none;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  [data-reset] {\n    margin: 0;\n    padding: 0;\n    color: inherit;\n    background: transparent;\n    display: grid;\n    place-items: center;\n  }\n\n  :focus {\n    outline: 0;\n  }\n`","export const theme = {\n  title: \"default\",\n\n  fonts: {\n    DM: \"'DM Sans', sans-serif\",\n    Rubik: \"'Rubik', sans-serif\"\n  },\n\n  sizes: {\n    sm: \"3.125rem\"\n  },\n\n  colors: {\n    accent: {\n      100: \"#FD6868\",\n      200: \"#FD4D4D\",\n      300: \"\"\n    },\n\n    gray: {\n      50: \"hsl(255, 1%, 98%)\",\n      100: \"hsl(255, 6%, 90%)\",\n      200: \"hsl(220, 6%, 80%)\",\n      300: \"hsl(220, 6%, 70%)\",\n      400: \"hsl(220, 6%, 60%)\",\n      500: \"hsl(220, 6%, 50%)\",\n      600: \"hsl(220, 6%, 40%)\",\n      700: \"hsl(220, 6%, 30%)\",\n      800: \"hsl(220, 6%, 20%)\",\n      900: \"hsl(220, 6%, 9%)\",\n    }\n  }\n}","import { darken, lighten } from \"polished\"\nimport { theme } from \"./default\"\n\nconst accent = \"#FD4D4D\"\n\nexport const dark: typeof theme = {\n  ...theme,\n\n  title: \"dark\",\n\n  fonts: {\n    ...theme.fonts,\n  },\n\n  sizes: {\n    ...theme.sizes,\n  },\n\n  colors: {\n    accent: {\n      100: lighten(0.1, accent),\n      200: accent,\n      300: darken(0.1, accent)\n    },\n\n    gray: {\n      50: \"hsl(255, 1%, 98%)\",\n      100: \"hsl(255, 6%, 90%)\",\n      200: \"hsl(220, 6%, 80%)\",\n      300: \"hsl(220, 6%, 70%)\",\n      400: \"hsl(220, 6%, 60%)\",\n      500: \"hsl(220, 6%, 50%)\",\n      600: \"hsl(220, 6%, 40%)\",\n      700: \"hsl(220, 6%, 30%)\",\n      800: \"hsl(220, 6%, 20%)\",\n      900: \"hsl(220, 6%, 9%)\",\n    }\n  }\n}","import { theme } from \"./default\"\n\nexport const light: typeof theme = {\n  ...theme,\n\n  title: \"light\",\n\n  fonts: {\n    ...theme.fonts,\n  },\n\n  sizes: {\n    ...theme.sizes,\n  },\n\n  colors: {\n    accent: {\n      100: \"#FD6868\",\n      200: \"#FD4D4D\",\n      300: \"\"\n    },\n\n    gray: {\n      50: \"hsl(255, 1%, 98%)\",\n      100: \"hsl(255, 6%, 90%)\",\n      200: \"hsl(220, 6%, 80%)\",\n      300: \"hsl(220, 6%, 70%)\",\n      400: \"hsl(220, 6%, 60%)\",\n      500: \"hsl(220, 6%, 50%)\",\n      600: \"hsl(220, 6%, 40%)\",\n      700: \"hsl(220, 6%, 30%)\",\n      800: \"hsl(220, 6%, 20%)\",\n      900: \"hsl(220, 6%, 9%)\",\n    }\n  }\n}","import { createContext, FC, ReactNode } from \"react\"\nimport { DefaultTheme, ThemeProvider } from \"styled-components\"\n/*  */\nimport { usePersistedState } from \"../hooks/usePersistedState\"\nimport GlobalStyle from \"../styles/global\"\nimport { dark, light } from \"../styles/themes\"\n\n\n\nconst availableThemes = {\n  light,\n  dark\n}\n\ntype ThemeContextType = {\n  currentTheme: DefaultTheme\n  themes: keyof typeof availableThemes\n  toggleTheme: (theme: DefaultTheme) => void\n  getThemes: () => typeof availableThemes\n}\n\nexport const ThemeContext = createContext({} as ThemeContextType)\n\ntype ThemeProviderProps = {\n  children: ReactNode\n}\n\nexport const Theme: FC<ThemeProviderProps> = ({ children }) => {\n  const [currentTheme, setCurrentTheme] = usePersistedState<DefaultTheme>(\"theme\", dark)\n  const themes: keyof typeof availableThemes = \"light\" || \"dark\"\n\n  const getThemes = () => availableThemes\n\n  const toggleTheme = (theme: DefaultTheme) => {\n    setCurrentTheme(theme.title === \"light\" ? dark : light)\n  }\n\n  return (\n    <ThemeContext.Provider value={{ currentTheme, themes, toggleTheme, getThemes }}>\n      <ThemeProvider theme={currentTheme}>\n        {children}\n\n        <GlobalStyle />\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  )\n} ","import { Dispatch, SetStateAction, useEffect, useState } from \"react\"\n\ntype Response<T> = [\n  T,\n  Dispatch<SetStateAction<T>>\n]\n\nexport function usePersistedState<T>(key: string, initialState: T): Response<T> {\n  const [state, setState] = useState(() => {\n    return initialState\n  })\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state))\n  }, [key, state])\n\n  return [state, setState]\n}","import { useContext } from \"react\";\nimport { FontSizeContext } from \"../contexts\";\n\nexport const useClamp = (min: string, max: string) => {\n  const { rootFontSize } = useContext(FontSizeContext)\n  \n  const minFontSize = Number(min.split(\"rem\")[0]);\n  const maxFontSize = Number(max.split(\"rem\")[0]);\n\n  const minWidth = 270 / rootFontSize;\n  const maxWidth = 1920 / rootFontSize;\n\n  const slope = (maxFontSize - minFontSize) / (maxWidth - minWidth);\n  const yAxisIntersection = -minWidth * slope + minFontSize;\n\n  return `\n    clamp(${minFontSize}rem, ${yAxisIntersection}rem + ${slope * 100}vw, ${maxFontSize}rem)\n  `;\n};","import { useContext  } from \"react\"\n\nimport { ThemeContext } from \"../contexts/ThemeContext\"\n\nexport const useTheme = () => {\n  return useContext(ThemeContext)\n}","import { lighten } from \"polished\"\nimport styled, { css, keyframes } from \"styled-components\"\n\ntype ButtonContainerProps = {\n  paddingBlockClamp: string\n  paddingHorizontalClamp: string\n  outlined: boolean\n  backgroundColor: string\n  fontSize: string\n  loading: boolean\n  active: boolean\n}\n\nconst loadingSpinner = keyframes`\n  from {\n    transform: rotate(0turn);\n  }\n\n  to {\n    transform: rotate(1turn);\n  }\n`\n\nexport const ButtonContainer = styled.button<ButtonContainerProps>`\n  border: 0;\n  outline: 0;\n  background: none;\n  position: relative;\n\n  a {\n    position: relative;\n    \n    font-weight: 600;\n    font-size: ${props => props.fontSize};\n    color: ${props => props.theme.colors.gray[50]};\n\n    border-radius: 5px;\n  }\n\n  ${props => css`\n    a {\n      padding: ${props.paddingBlockClamp} ${props.paddingHorizontalClamp};\n    }\n  `}\n\n  &:disabled {\n    a {\n      cursor: not-allowed;\n      opacity: 0.7;\n    }\n  }\n\n  ${props => props.outlined ? \n    css`\n      a {  \n        padding calc(${props.paddingBlockClamp} - 2px) calc(${props.paddingHorizontalClamp} - 3px);\n\n        border: 2px solid ${props.backgroundColor};\n        box-shadow: 0px 2px 5px 3px black;\n\n        background-image: linear-gradient(to right, ${props.backgroundColor}, ${props.backgroundColor});\n        background-size: 100% 0%;\n        background-repeat: no-repeat;\n        background-position: right;\n        \n        color: ${props.theme.colors.gray[800]};\n\n        transition: all 200ms;\n        \n        ${props.disabled === false && css`\n          &:hover, &:focus {\n            color: ${props.theme.colors.gray[50]};\n            background-size: 100% 100%;\n          }\n        `}\n          \n        ${props.active && css`\n          color: ${props.theme.colors.gray[50]};\n          background-size: 100% 100%;\n        `}\n      }\n    `\n    : \n    css`\n      a {\n        border: none;\n        background: ${props.backgroundColor} !important;\n\n        ${props.disabled === false && css`\n          &:hover, &:focus {\n            background: ${lighten(0.2, props.backgroundColor)} !important;\n          }\n          `}\n          \n        ${props.active && css`\n          background: ${lighten(0.2, props.backgroundColor)} !important;\n        `}\n      }\n    `\n  }\n\n  ${props => props.loading && css`\n    span {\n      visibility: hidden;\n      opacity: 0;\n    }\n      \n    &::after {\n      content: \"\";\n      position: absolute;\n      width: 12px;\n      height: 12px;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      margin: auto;\n      border: 4px solid transparent;\n      border-top-color: #ffffff;\n      border-radius: 50%;\n      animation: ${loadingSpinner} 1s ease infinite;\n    }\n  `}\n\n  &:hover {\n    cursor: pointer;\n  }\n`","import { FC, memo, ReactNode, useEffect, useRef, useState } from \"react\"\n/*  */\nimport { Link } from \"..\"\nimport { useClamp, useTheme } from \"../../hooks\"\nimport { ButtonContainer } from \"./styles\"\n\ntype ButtonProps = {\n  children: ReactNode\n  variant?: \"primary\" | \"secondary\" | \"tertiary\" | \"outlined\"\n  href: string\n  name: string\n  type?: \"button\" | \"submit\" | \"reset\"\n  disabled?: boolean\n  loading?: boolean\n}\n\nconst Button: FC<ButtonProps> = ({\n  children,\n  variant = \"primary\",\n  href,\n  name,\n  type = \"button\",\n  loading = false,\n  disabled = false\n}) => {\n  const [isLoading, setIsLoading] = useState(loading)\n  const ButtonRef = useRef<HTMLButtonElement | null>(null)\n\n  const { currentTheme } = useTheme()\n  const [background, setBackground] = useState(currentTheme.colors.accent[200])\n  const [outlined, setOutlined] = useState(false)\n  \n  const fontSize = useClamp(\"0.5rem\", \"1rem\")\n  \n  useEffect(() => {\n    setOutlined(variant === \"outlined\" || variant === \"secondary\")\n  }, [variant])\n  \n  useEffect(() => {\n    switch (variant) {\n      case \"primary\":\n        setBackground(currentTheme.colors.accent[200])\n        break\n      \n      case \"secondary\":\n        setBackground(currentTheme.colors.accent[200])\n        break\n      \n      case \"tertiary\":\n        setBackground(currentTheme.colors.gray[700])\n        break\n      \n      case \"outlined\":\n        setBackground(currentTheme.colors.gray[700])\n        break\n      \n      default:\n        setBackground(currentTheme.colors.accent[200])\n        break\n    }\n  }, [currentTheme.colors.accent, currentTheme.colors.gray, variant])\n\n  useEffect(() => {\n    ButtonRef.current?.addEventListener(\"click\", () => {\n      setIsLoading(!isLoading)\n    })\n  }, [isLoading])\n  \n  return (\n    <ButtonContainer\n      tabIndex={-1}\n      ref={ButtonRef}\n      type={type}\n      active={isLoading}\n      loading={isLoading}\n      disabled={disabled}\n      outlined={outlined}\n      fontSize={fontSize}\n      backgroundColor={background}\n      paddingBlockClamp={useClamp(\"0.2rem\", \"0.8rem\")}\n      paddingHorizontalClamp={useClamp(\"1rem\", \"1.875rem\")}\n    >\n      <Link href={href} name={name}>\n        <span>\n          {children}\n        </span>\n      </Link>\n    </ButtonContainer>\n  )\n}\n\nexport default memo(Button)","import styled, { css } from \"styled-components\"\n\ntype ContainerProps = {\n  paddingBlockClamp: string\n}\n\nexport const Container = styled.header<ContainerProps>`\n  width: 100%;\n\n  position: fixed;\n\n  display: grid;\n  \n  place-items: center;\n\n  background: ${props => props.theme.colors.gray[900]};\n  padding: ${props => props.paddingBlockClamp} 0;\n`\n\nexport const NavigationContainer = styled.nav`\n  width: 90%;\n\n  display: grid;\n\n  grid-template-areas: \"logo . links . buttons\";\n  grid-template-columns: 1fr 1fr 0.8fr 1fr 1fr;\n`\n\nexport const LogoContainer = styled.div`\n  grid-area: logo;\n`\n\nexport const Nav = styled.ul`\n  grid-area: links;\n\n  display: flex;\n\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport const NavItem = styled.li`\n  a {\n    font-weight: 500;\n    position: relative;\n\n    ${({ theme: { colors: { accent } } }) => css`\n      background-image: linear-gradient(to right, ${accent[200]}, ${accent[100]});\n    `}\n    background-size: 0% 100%;\n    background-repeat: no-repeat;\n    background-position: left bottom;\n    padding: 0.2rem;\n    transition: all 320ms cubic-bezier(0.215, 0.610, 0.355, 1);\n\n    &:hover, &:focus {\n      background-size: 100% 100%;\n    }\n  }\n`\n\nexport const ActionContainer = styled.section`\n  grid-area: buttons;\n\n  display: flex;\n\n  align-items: center;\n  justify-content: space-between;\n`","import { FC, memo } from \"react\"\n/*  */\nimport { Button, Link, Logo } from \"..\"\nimport { useClamp } from \"../../hooks\"\nimport { ActionContainer, Container, LogoContainer, Nav, NavigationContainer, NavItem } from \"./styles\"\n\ntype HeaderProps = {\n  headerRef: any\n  // ref: ((instance: HTMLElement | null) => void) | RefObject<HTMLElement> | null | undefined\n}\n\nconst Header: FC<HeaderProps> = ({ headerRef }) => {\n  const headerPaddingBlock = useClamp(\"0.75rem\", \"1.25rem\")\n  \n  return (\n    <Container ref={headerRef} paddingBlockClamp={headerPaddingBlock}>\n      <NavigationContainer>\n        <LogoContainer>\n          <Logo size={64} variant=\"full\" />\n        </LogoContainer>\n\n        <Nav>\n          <NavItem>\n            <Link href=\"#blog\" name=\"blog\">Blog</Link>\n          </NavItem>\n\n          <NavItem>\n            <Link href=\"#Social\" name=\"Social\">Social</Link>\n          </NavItem>\n\n          <NavItem>\n            <Link href=\"#Study\" name=\"Study\">Study</Link>\n          </NavItem>\n        </Nav>\n\n        <ActionContainer>\n          <Button href=\"#login\" name=\"Login\" variant=\"secondary\">Login</Button>\n          <Button href=\"#signup\" name=\"Sign Up\" variant=\"primary\">Sign Up</Button>\n        </ActionContainer>\n      </NavigationContainer>\n    </Container>\n  )\n}\n\nexport default memo(Header)","import { AnchorHTMLAttributes, FC, memo } from \"react\"\nimport { Link as Anchor } from \"react-router-dom\"\n\ninterface LinkProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  name: string\n  href: string\n}\n\nconst Link: FC<LinkProps> = ({ children, name, href, ...rest }) => {\n  return (\n    <Anchor \n      to={href}\n      href={href}\n      {...rest}\n      aria-label={name}\n      rel=\"noopener noreferrer\"\n      data-reset\n    >\n      {children}\n    </Anchor>\n  )\n}\n\nexport default memo(Link)","import styled, { css, keyframes } from \"styled-components\"\n\nconst textFocusAnimation = keyframes`\n  from {\n    background-size: 100% 2px;\n  }\n  \n  to {\n    background-size: 100% 100%;\n  }\n`\n\ntype LogoContainerProps = {\n  direction?: \"row\" | \"column\"\n}\n\nexport const LogoContainer = styled.div<LogoContainerProps>`\n  display: flex;\n\n  align-items: center;\n  justify-content: center;\n  \n  flex-direction: ${props => props.direction};\n\n  [data-link=\"icon\"] {\n    &:hover, &:focus {\n      #background {\n        fill: ${props => props.theme.colors.gray[700]};\n      }\n\n      #logo {\n        fill: ${props => props.theme.colors.accent[100]};\n      }\n    }\n  }\n\n  [data-link=\"title\"] {\n    ${props => css`\n      background-image: linear-gradient(to right, ${props.theme.colors.accent[200]}, ${props.theme.colors.accent[100]});\n    `}\n    background-size: 0% 2px;\n    background-repeat: no-repeat;\n    background-position: left bottom;\n\n    transition: background 200ms;\n\n    &:hover {\n      cursor: pointer;\n      \n      background-size: 100% 2px;\n    }\n\n    &:focus {\n      animation: ${textFocusAnimation} forwards 200ms;\n    }\n  }\n`\n\ntype SvgProps = {\n  marginLeftClamp: string\n}\n\nexport const SvgLogo = styled.svg<SvgProps>`\n  background: ${props => props.theme.colors.gray[900]};\n  cursor: pointer;\n  margin-right: ${props => props.marginLeftClamp};\n\n  path {\n    transition: all 200ms;  \n  }\n`\n\ntype LogoTitleProps = {\n  fontSizeClamp: string\n}\n\nexport const LogoTitle = styled.h1<LogoTitleProps>`\n  font-size: ${props => props.fontSizeClamp};\n  font-family: ${props => props.theme.fonts.DM};\n  font-weight: 400;\n\n  height: min-content;\n  \n  strong {\n    font-weight: 700\n  }\n`","import { FC, memo, useEffect, useMemo, useState } from \"react\"\nimport { Link } from \"../../components\"\n/*  */\nimport { useClamp, useTheme } from \"../../hooks\"\n/*  */\nimport { LogoContainer, LogoTitle, SvgLogo } from \"./styles\"\n\ntype LogoProps = {\n  /**\n   * tell wether you want the full logo, only the img or the text\n   */\n  variant?: \"text\" | \"img\" | \"full\"\n  /**\n   * please supply a size in pixel with number or use the `useClamp()` hook to create a resizable size\n   */\n  size?: number | string \n}\n\nconst Logo: FC<LogoProps> = ({ variant = \"full\", size = 64 }) => {\n  const { currentTheme } = useTheme()\n\n  const logoMarginLeft = useClamp(\"0.1rem\", \"2rem\")\n  const logoTitleFontSize = useClamp(\"0.8rem\", \"1.25rem\")\n\n  const LogoImg = useMemo(() => (\n    <Link data-link=\"icon\" tabIndex={1} href=\"/\" name=\"homepage\">\n      <SvgLogo marginLeftClamp={logoMarginLeft} width={size} height={size} viewBox={`0 0 66 64`} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clipPath=\"url(#clip0_536:2834)\">\n          <path\n            id=\"background\"\n            d=\"M54.0693 0H12.0693C5.9942 0 1.06934 4.92487 1.06934 11V53C1.06934 59.0751 5.9942 64 12.0693 64H54.0693C60.1445 64 65.0693 59.0751 65.0693 53V11C65.0693 4.92487 60.1445 0 54.0693 0Z\"\n            fill={currentTheme.colors.gray[900]}\n          />\n          <path\n            id=\"logo\"\n            d=\"M52.3926 21.7143V23C52.3926 23.1705 52.3241 23.334 52.2021 23.4546C52.08 23.5751 51.9145 23.6429 51.742 23.6429H49.7902V24.6072C49.7902 25.1397 49.3532 25.5714 48.8143 25.5714H16.9348C16.3958 25.5714 15.9589 25.1397 15.9589 24.6072V23.6429H14.007C13.8345 23.6429 13.6691 23.5751 13.547 23.4546C13.425 23.334 13.3564 23.1705 13.3564 23V21.7143C13.3564 21.5871 13.3946 21.4628 13.4662 21.3571C13.5376 21.2513 13.6393 21.1689 13.7583 21.1203L32.6258 14.0489C32.7851 13.9837 32.964 13.9837 33.1233 14.0489L51.9907 21.1203C52.1097 21.1689 52.2114 21.2513 52.2829 21.3571C52.3544 21.4628 52.3926 21.5871 52.3926 21.7143ZM50.4408 46.1429H15.3083C14.2303 46.1429 13.3564 47.0063 13.3564 48.0714V49.3571C13.3564 49.5276 13.425 49.6912 13.547 49.8117C13.6691 49.9323 13.8345 50 14.007 50H51.742C51.9145 50 52.08 49.9323 52.2021 49.8117C52.3241 49.6912 52.3926 49.5276 52.3926 49.3571V48.0714C52.3926 47.0063 51.5187 46.1429 50.4408 46.1429ZM19.8625 26.8572V42.2857H16.9348C16.3958 42.2857 15.9589 42.7175 15.9589 43.25V44.8571H49.7902V43.25C49.7902 42.7175 49.3532 42.2857 48.8143 42.2857H45.8866V26.8572H40.6818V42.2857H35.4769V26.8572H30.2721V42.2857H25.0673V26.8572H19.8625Z\"\n            fill={currentTheme.colors.accent[200]}\n          />\n        </g>\n      </SvgLogo>\n    </Link>\n  ), [currentTheme.colors.accent, currentTheme.colors.gray, logoMarginLeft, size])\n\n  const LogoName = useMemo(() => (\n    <Link data-link=\"title\" tabIndex={2} href=\"/\" name=\"homepage\">\n      <LogoTitle fontSizeClamp={logoTitleFontSize}>\n        School<strong>Club</strong>\n      </LogoTitle>\n    </Link>\n  ), [logoTitleFontSize])\n\n  const [component, setComponent] = useState<JSX.Element>(\n    <LogoContainer>\n      {LogoImg}\n      {LogoName}\n    </LogoContainer>\n  )\n\n  useEffect(() => {\n    switch (variant) {\n      case \"full\":\n        setComponent(\n          <LogoContainer>\n            {LogoImg}\n            {LogoName}\n          </LogoContainer>\n        )\n        break\n        \n        case \"img\":\n          setComponent(LogoImg)\n        break\n  \n        case \"text\":\n          setComponent(LogoName)\n          break\n          \n        default:\n          setComponent(\n            <LogoContainer>\n              {LogoImg}\n              {LogoName}\n            </LogoContainer>\n          )\n          break\n    }\n  }, [LogoImg, LogoName, variant])\n\n  return (\n    <>\n      {component}\n    </>\n  )\n}\n\nexport default memo(Logo)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { FC } from \"react\"\nimport { HashRouter, Switch } from \"react-router-dom\"\n\nexport const Router: FC = ({ children }) => {\n  return (\n    <HashRouter>\n      <Switch>\n        {children}\n      </Switch>\n    </HashRouter>\n  )\n}","import { lazy, Suspense, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { Route } from 'react-router-dom';\n/*  */\nimport { Header } from \"./components\";\nimport { FontSize, Theme } from \"./contexts\";\nimport { register } from './pwa/serviceWorkerRegistration';\nimport { Router } from './router';\nimport { Main } from \"./styles/global\";\n/*  */\nconst Home = lazy(() => import(\"./pages/Home\"))\n\nexport const App = () => {\n\tconst [headerHeight, setHeaderHeight] = useState(0)\n\tconst HeaderRef = useRef<any>(null)\n\n\tuseEffect(() => {\n\t\tregister();\n\t}, []);\n\t\n\tuseLayoutEffect(() => {\n\t\tdocument.onreadystatechange = () => {\n\t\t\tsetHeaderHeight(HeaderRef?.current?.offsetHeight || 0)\n\t\t};\n\t}, [HeaderRef])\n\n\t// <Route exact path=\"/loading\" component={() => <Loading />} />\n\t\t\t\t\t\t\n\t// \t\t\t\t\t<Route exact path=\"/fobos\">\n\t// \t\t\t\t\t\t<Redirect to=\"/\" />\n\t// \t\t\t\t\t</Route>\n\n\treturn (\n\t\t<Router>\n\t\t\t<FontSize>\n\t\t\t\t<Theme>\n\t\t\t\t\t<Suspense fallback={<h1>loading...</h1>}>\n\t\t\t\t\t\t<Header headerRef={HeaderRef} />\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Main paddingTop={headerHeight}>\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={() => <Home />} />\n\t\t\t\t\t\t</Main>\n\t\t\t\t\t</Suspense>\n\t\t\t\t</Theme>\n\t\t\t</FontSize>\n\t\t</Router>\n\t);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n/*  */\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"body\")\n);"],"sourceRoot":""}